!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@deck.gl/core"),require("@deck.gl/layers"),require("@luma.gl/core"),require("@luma.gl/constants")):"function"==typeof define&&define.amd?define(["exports","@deck.gl/core","@deck.gl/layers","@luma.gl/core","@luma.gl/constants"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).DeckGlParticle={},e.deck,e.deck,e.luma,e.luma.GL)}(this,(function(e,t,n,o,r){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=i(r);function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function u(e,t,n){return t&&c(e.prototype,t),n&&c(e,n),e}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function v(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,o=f(e);if(t){var r=f(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return m(this,n)}}function g(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(Object(n),!0).forEach((function(t){y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var P=y({},a.default.TEXTURE_WRAP_S,a.default.REPEAT);function b(e,t){var n=e[1]*Math.PI/180,o=e[0]*Math.PI/180,r=t[1]*Math.PI/180,i=r-n,a=t[0]*Math.PI/180-o,s=Math.sin(i/2)*Math.sin(i/2)+Math.cos(n)*Math.cos(r)*Math.sin(a/2)*Math.sin(a/2);return 6370972*(2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s)))}var x=h(h({},n.LineLayer.defaultProps),{},{image:{type:"image",value:null,async:!0},bounds:{type:"array",value:[-180,-90,180,90],compare:!0},_imageCoordinateSystem:t.COORDINATE_SYSTEM.LNGLAT,textureParameters:P,numParticles:{type:"number",min:1,max:1e6,value:5e3},maxAge:{type:"number",min:1,max:255,value:100},speedFactor:{type:"number",min:0,max:1,value:1},animate:!0}),w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(n,e);var t=v(n);function n(){return s(this,n),t.apply(this,arguments)}return u(n,[{key:"getShaders",value:function(){return h(h({},l(f(n.prototype),"getShaders",this).call(this)),{},{inject:{"vs:#decl":"\n          attribute float instanceAges;\n          uniform float maxAge;\n          varying float drop;\n          const vec2 DROP_POSITION = vec2(0);\n        ","vs:#main-start":"\n          drop = float(instanceSourcePositions.xy == DROP_POSITION || instanceTargetPositions.xy == DROP_POSITION);\n        ","vs:DECKGL_FILTER_COLOR":"\n          color = vec4(color.rgb, color.a * (1. - instanceAges / maxAge));\n        ","fs:#decl":"\n          varying float drop;\n        ","fs:#main-start":"\n          if (drop > 0.5) discard;\n        "}})}},{key:"initializeState",value:function(){l(f(n.prototype),"initializeState",this).call(this,{}),this._setupTransformFeedback();var e=this.getAttributeManager();e.remove(["instanceSourcePositions","instanceTargetPositions"]),e.addInstanced({instanceSourcePositions:{size:3,type:a.default.DOUBLE,fp64:!1,transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:a.default.DOUBLE,fp64:!1,transition:!0,accessor:"getTargetPosition"},instanceAges:{size:1,type:a.default.FLOAT,update:function(){}}})}},{key:"updateState",value:function(e){var t=e.props,o=e.oldProps,r=e.changeFlags;l(f(n.prototype),"updateState",this).call(this,{props:t,oldProps:o,changeFlags:r}),t.numParticles===o.numParticles&&t.maxAge===o.maxAge||this._setupTransformFeedback()}},{key:"finalizeState",value:function(){this._deleteTransformFeedback(),l(f(n.prototype),"finalizeState",this).call(this)}},{key:"draw",value:function(e){var t=e.uniforms,o=this.props,r=o.maxAge,i=o.animate,a=this.state,s=a.sourcePositions,c=a.targetPositions,u=a.ages,d=a.model;i&&this._runTransformFeedback(),d.setAttributes({instanceSourcePositions:s,instanceTargetPositions:c,instanceAges:u}),d.setUniforms({maxAge:r}),l(f(n.prototype),"draw",this).call(this,{uniforms:t})}},{key:"_setupTransformFeedback",value:function(){var e=this.context.gl,t=this.props,n=t.numParticles,r=t.maxAge;this.state.initialized&&this._deleteTransformFeedback();var i=n*r,a=n*(r-1),s=new o.Buffer(e,new Float32Array(3*i)),c=new o.Buffer(e,new Float32Array(3*i)),u=new o.Buffer(e,{data:new Float32Array(new Array(r).fill(void 0).map((function(e,t){return new Array(n).fill(t)})).flat())}),f=new o.Transform(e,{sourceBuffers:{sourcePosition:s},feedbackBuffers:{targetPosition:c},feedbackMap:{sourcePosition:"targetPosition"},vs:"#version 300 es\n#define SHADER_NAME particle-layer-update-transform-vertex-shader\n\nprecision highp float;\n\nin vec3 sourcePosition;\nout vec3 targetPosition;\n\nuniform sampler2D speedTexture;\nuniform vec4 bounds;\n\nuniform float numParticles;\nuniform float maxAge;\n\nuniform float viewportSphere;\nuniform vec2 viewportSphereCenter;\nuniform float viewportSphereRadius;\nuniform vec4 viewportBounds;\nuniform float viewportSpeedFactor;\n\nuniform float time;\nuniform float seed;\n\nconst vec2 DROP_POSITION = vec2(0);\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),\n    (pos.y - bounds[3]) / (bounds[1] - bounds[3])\n  );\n}\n\n// see https://stackoverflow.com/a/27228836/1823988\nfloat atan2(float y, float x) {\n  return x == 0. ? sign(y) * PI / 2. : atan(y, x);\n}\n\n// see https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js#L187\nfloat distanceTo(vec2 from, vec2 point) {\n  float y1 = radians(from.y);\n  float x1 = radians(from.x);\n  float y2 = radians(point.y);\n  float x2 = radians(point.x);\n  float dy = y2 - y1;\n  float dx = x2 - x1;\n\n  float a = sin(dy / 2.) * sin(dy / 2.) + cos(y1) * cos(y2) * sin(dx / 2.) * sin(dx / 2.);\n  float c = 2. * atan2(sqrt(a), sqrt(1. - a));\n  float d = EARTH_RADIUS * c;\n\n  return d;\n}\n\n// see https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js#L360\nvec2 destinationPoint(vec2 from, float dist, float bearing) {\n  float d = dist / EARTH_RADIUS;\n  float r = radians(bearing);\n\n  float y1 = radians(from.y);\n  float x1 = radians(from.x);\n\n  float siny2 = sin(y1) * cos(d) + cos(y1) * sin(d) * cos(r);\n  float y2 = asin(siny2);\n  float y = sin(r) * sin(d) * cos(y1);\n  float x = cos(d) - sin(y1) * siny2;\n  float x2 = x1 + atan2(y, x);\n\n  float lat = degrees(y2);\n  float lon = degrees(x2);\n\n  return vec2(lon, lat);\n}\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 randVec2(vec2 seed) {\n  return vec2(rand(seed + 1.3), rand(seed + 2.1));\n}\n\nvec2 randPosition(vec2 seed) {\n  vec2 randomVec2 = randVec2(seed);\n  \n  if (viewportSphere > 0.5) {\n    randomVec2.x += 0.0001; // prevent generating point in the center\n    float dist = sqrt(randomVec2.x) * viewportSphereRadius;\n    float bearing = randomVec2.y * 360.;\n    return destinationPoint(viewportSphereCenter, dist, bearing);\n  } else {\n    vec2 viewportBoundsMin = viewportBounds.xy;\n    vec2 viewportBoundsMax = viewportBounds.zw;\n    return mix(viewportBoundsMin, viewportBoundsMax, randomVec2);\n  }\n}\n\nbool isPositionVisible(vec2 position) {\n  if (viewportSphere > 0.5) {\n    return distanceTo(viewportSphereCenter, position) <= viewportSphereRadius;\n  } else {\n    vec2 viewportBoundsMin = viewportBounds.xy;\n    vec2 viewportBoundsMax = viewportBounds.zw;\n    return (\n      viewportBoundsMin.x <= position.x && position.x <= viewportBoundsMax.x &&\n      viewportBoundsMin.y <= position.y && position.y <= viewportBoundsMax.y\n    );\n  }\n}\n\nvoid main() {\n  float particleIndex = mod(float(gl_VertexID), numParticles);\n  float particleAge = floor(float(gl_VertexID) / numParticles);\n\n  if (sourcePosition.xy != DROP_POSITION) {\n    // update position\n    vec2 uv = getUV(sourcePosition.xy);\n    vec4 values = texture2D(speedTexture, uv);\n    vec2 speed = values.xy * 2. - 1.;\n    // float dist = sqrt(speed.x * speed.x + speed.y + speed.y) * viewportSpeedFactor * 10000.;\n    // float bearing = degrees(-atan2(speed.y, speed.x));\n    // targetPosition.xy = destinationPoint(sourcePosition.xy, dist, bearing);\n    float distortion = cos(radians(sourcePosition.y)); \n    vec2 distortedSpeed = vec2(speed.x / distortion, speed.y);\n    vec2 offset = distortedSpeed * viewportSpeedFactor;\n    targetPosition.xy = sourcePosition.xy + offset;\n\n    if (values.a != 1.) {\n      // drop nodata\n      targetPosition.xy = DROP_POSITION;\n    }\n\n    // drop out of bounds\n    if (!isPositionVisible(sourcePosition.xy) || !isPositionVisible(targetPosition.xy)) {\n      targetPosition.xy = DROP_POSITION;\n    }\n\n    if (particleAge < 1.) {\n      if (abs(mod(particleIndex, maxAge + 2.) - mod(time, maxAge + 2.)) < 1.) {\n        // drop by maxAge, +2 because only non-randomized pairs are rendered\n        targetPosition.xy = DROP_POSITION;\n      }\n    }\n  } else {\n    if (particleAge < 1.) {\n      // generate random position to prevent converging particles\n      vec2 randomSeed = vec2(particleIndex * seed / numParticles);\n      vec2 randomPosition = randPosition(randomSeed);\n      targetPosition.xy = randomPosition;\n    } else {\n      targetPosition.xy = DROP_POSITION;\n    }\n  }\n}\n",elementCount:i});this.setState({initialized:!0,numInstances:i,numAgedInstances:a,sourcePositions:s,targetPositions:c,ages:u,transform:f})}},{key:"_runTransformFeedback",value:function(){var e=this.context,t=e.viewport,n=e.timeline,o=this.props,r=o.image,i=o.bounds,a=o.numParticles,s=o.speedFactor,c=o.maxAge,u=this.state,f=u.numAgedInstances,l=u.transform;if(r){var d=t.resolution?1:0,p=[t.longitude,t.latitude],m=Math.max(b(p,t.unproject([0,0])),b(p,t.unproject([t.width/2,0])),b(p,t.unproject([0,t.height/2]))),y=t.getBounds();y[1]=Math.max(y[1],-85.051129),y[3]=Math.min(y[3],85.051129);var v=s*(window.devicePixelRatio||1)/Math.pow(2,t.zoom),g=l.bufferTransform.bindings[l.bufferTransform.currentIndex].sourceBuffers.sourcePosition,h=l.bufferTransform.bindings[l.bufferTransform.currentIndex].feedbackBuffers.targetPosition;g.copyData({sourceBuffer:h,readOffset:0,writeOffset:4*a*3,size:4*f*3});var P={speedTexture:r,bounds:i,numParticles:a,maxAge:c,viewportSphere:d,viewportSphereCenter:p,viewportSphereRadius:m,viewportBounds:y,viewportSpeedFactor:v,time:n.getTime(),seed:Math.random()};l.run({uniforms:P}),l.swap()}}},{key:"_deleteTransformFeedback",value:function(){var e=this.state,t=e.initialized,n=e.sourcePositions,o=e.targetPositions,r=e.ages,i=e.transform;t&&(n.delete(),o.delete(),r.delete(),i.delete(),this.setState({initialized:!0,sourcePositions:void 0,targetPositions:void 0,ages:void 0,transform:void 0}))}},{key:"step",value:function(){this._runTransformFeedback(),this.setNeedsRedraw()}},{key:"clear",value:function(){var e=this.state,t=e.numInstances,n=e.sourcePositions,o=e.targetPositions;n.subData({data:new Float32Array(3*t)}),o.subData({data:new Float32Array(3*t)}),this.setNeedsRedraw()}}]),n}(n.LineLayer);w.layerName="ParticleLayer",w.defaultProps=x;var O=function(){function e(t){s(this,e),y(this,"running",!1),y(this,"raf",null),y(this,"lastFrameTime",0),this.update=t}return u(e,[{key:"frame",value:function(){var e=this,t=Date.now(),n=t-this.lastFrameTime,o=1e3/30;n>o&&(this.lastFrameTime=t-n%o,this.update()),this.running&&(this.raf=window.requestAnimationFrame((function(){return e.frame()})))}},{key:"start",value:function(){var e=this;this.running||(this.running=!0,this.raf=window.requestAnimationFrame((function(){return e.frame()})))}},{key:"stop",value:function(){this.running&&(this.running=!1,window.cancelAnimationFrame(this.raf),this.raf=null)}},{key:"toggle",value:function(e){e?this.start():this.stop()}}]),e}();e.Animation=O,e.ParticleLayer=w,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=deck.gl-particle.min.js.map
